openapi: 3.0.0
info:
  version: "1.0.0"
  title: "Account service API"
  description: Account services
servers:
  - url: http://{{baseurl}}
paths:
  /user/create:
    post:
      summary: create new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        "200":
          description: User created successfully and direct to /verify-email
          content:
            text/plain:
              example: /verify-email
        "400":
          description: Invalid input data

  /user/edit/{id}:
    patch:
      summary: Edit user data
      parameters:
        - name: id
          in: path
          description: id of the user to edit
          required: true
          schema:
            type: object
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        "200":
          description: User updated successfully
        "400":
          description: Invalid input data

  /user/{id}:
    get:
      summary: Retrieve user data
      parameters:
        - name: id
          in: path
          description: ID of the user to retrieve
          required: true
          schema:
            type: object
      responses:
        "200":
          description: User data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
        "404":
          description: User not found

  /user/delete/{id}:
    delete:
      summary: delete user data
      parameters:
        - name: id
          in: path
          description: id of the user to edit
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User deleted successfully
        "404":
          description: User not found

  /verify-email:
    post:
      summary: sending email-verification link to user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        "200":
          description: verification link has been sent
        "400":
          description: Invalid request body

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: The unique identifier of the user
        name:
          type: string
          description: The name of the user
        email:
          type: string
          description: The email address of the user
        password:
          type: string
          description: The password of the user
        is_verified:
          type: boolean
          description: The email status
      required:
        - id
        - name
        - email
        - password
